basePath: /api/v1
definitions:
  models.CreateTaskRequest:
    description: Create task request
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.GetAllTaskResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Task'
        type: array
      pagination:
        $ref: '#/definitions/models.Pagination'
    type: object
  models.MessageResponse:
    properties:
      message:
        type: string
    type: object
  models.Pagination:
    properties:
      limit:
        type: integer
      offset:
        type: integer
    type: object
  models.Task:
    description: Task information
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - description
    - title
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a simple CRUD API for managing tasks
  title: Task CRUD API
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks with pagination
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task with the input payload
      parameters:
      - description: Create task request
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a task by ID
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a task by ID
      tags:
      - tasks
    patch:
      consumes:
      - application/json
      description: Update a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a task by ID
      tags:
      - tasks
swagger: "2.0"
